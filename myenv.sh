#!/bin/bash
#
# $Id$
#
# Icetray environment script.
#
# modified to work with pone-offline
#
	

if [ "$1" = "help" ]
    then
    echo "Usage: $0 [SHELL]"
    echo "Spawn a new shell with an Icetray environment loaded"
    echo ""
    echo "SHELL can specified with or without a full path.  If SHELL"
    echo "is omitted the login shell is used by default."
    echo "Examples:"
    echo "   ./env-shell.sh"
    echo "   ./env-shell.sh tcsh"
    echo "   ./env-shell.sh /bin/tcsh"
    echo ""
    echo "To exit the Icetray environment simply exit the new shell."
    echo ""
    exit 1
fi

if [ -z "$1" ]
    then # user did not specify a shell
    NEW_SHELL=$SHELL 
    # only exit if no shell specified on command line *and* env already loaded 
    if [ -n "$I3_SHELL" ] 
	then  
	echo "****************************************************************"
	echo "You are currently in a shell with an Icetray environment loaded."
	echo "Please exit the current shell and re-run $0 from a clean shell."
	echo "****************************************************************"
	echo "Environment not (re)loaded."
	exit 2
    fi
else
    NEW_SHELL=$1
    shift
    ARGV="$@"
fi

_I3_SHELL=$NEW_SHELL

pushd `dirname $0` >/dev/null
BASEDIR='/usr/local/share/icetray-public'
popd >/dev/null

_I3_SRC=$BASEDIR
_I3_BUILD=$BASEDIR/build
_I3_TESTDATA=/usr/local/share/icetray-public/build/test-data
_I3_PRODDATA=/usr/local/share/icetray-public/build/prod-data

_PONE_SRC="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Check for I3_BUILD mismatch
if [ -n "$I3_BUILD" -a "$I3_BUILD" != "$_I3_BUILD" ]
then
    echo "****************************************************************"
    echo "I3_BUILD CHANGED"
    echo "It appears that you are attempting to load an icetray environment different"
    echo "than the one already loaded"
    echo "          This I3_BUILD=$_I3_BUILD"
    echo "Already loaded I3_BUILD=$I3_BUILD"
    echo "****************************************************************"
    echo "Environment not (re)loaded."
    exit 2
fi

_ROOTSYS=''
_LD_LIBRARY_PATH=/usr/local/share/icetray-public/build/lib:/usr/local/share/icetray-public/build/lib/tools::$LD_LIBRARY_PATH
_DYLD_LIBRARY_PATH=/usr/local/share/icetray-public/build/lib:/usr/local/share/icetray-public/build/lib/tools:$DYLD_LIBRARY_PATH

_PYTHONPATH=/usr/local/share/icetray-public/build/lib:$PYTHONPATH
_PATH=/usr/local/share/icetray-public/build/bin:$PATH


_HIPPO_FOUND=
if [ "${_HIPPO_FOUND}" = 1 ]; then
    _LD_LIBRARY_PATH=:::${_LD_LIBRARY_PATH}
    _DYLD_LIBRARY_PATH=:${_DYLD_LIBRARY_PATH}
    _PYTHONPATH=:${_PYTHONPATH}
fi

_HDF5_USE_FILE_LOCKING=${HDF5_USE_FILE_LOCKING:-FALSE}

TOPBAR="************************************************************************"
WIDTH=`echo "$TOPBAR" | wc -c`

WIDTH=$(( $WIDTH-2 ))

printctr()
{
    LEN=`echo "$*" | wc -c`
    LOFFSET=$(( ($WIDTH-$LEN)/2 ))
    ROFFSET=$(( $WIDTH-$LOFFSET-$LEN ))

    FORMAT="*%${LOFFSET}s%s%${ROFFSET}s*\n"
    printf $FORMAT " " "$*" " "
}

if [ -z "$ARGV" ]
    then
    printf "$TOPBAR\n"
    printctr ""
    printctr "W E L C O M E  to  I C E T R A Y"
    printctr ""
    printctr "Version icetray-public.main     git:c23a37bb"
    printctr ""
    printctr "You are welcome to visit our Web site"
    printctr "http://icecube.umd.edu"
    printctr ""
    printf "$TOPBAR\n"
    printf "\n"
    printf "Icetray environment has:\n"
    printf "   I3_SRC       = %s\n" $_I3_SRC
    printf "   I3_BUILD     = %s\n" $_I3_BUILD
    [ -d "$_I3_TESTDATA" ] && printf "   I3_TESTDATA  = %s\n" $_I3_TESTDATA \
                           || printf "   I3_TESTDATA should be set to an existing directory path\n" \
                                     "   (and 'make rsync' may need to be run) if you wish to run tests."
    [ -d "$_I3_PRODDATA" ] && printf "   I3_PRODDATA  = %s\n" $_I3_PRODDATA \
                           || printf "   I3_PRODDATA should be set to an existing directory path\n" \
                                     "   (and 'make rsync-prod-data' may need to be run) if you wish to use 'production data'."
    echo   "   Python       =" 3.10.6
fi

if [ -z "$I3_SHELL" ] # a clean, first invocation
    then

    # GEANT4_ENV_VARS pulls in GEANT4 variables,
    # generated by cmake/make_geant4_env.py

    PATH=$_PATH \
	LD_LIBRARY_PATH=$_LD_LIBRARY_PATH \
	DYLD_LIBRARY_PATH=$_DYLD_LIBRARY_PATH \
	PYTHONPATH=$_PYTHONPATH \
	ICETRAY_CLASSPATH=$_ICETRAY_CLASSPATH \
        I3_PLATFORM="" \
	I3_SRC=$_I3_SRC \
	I3_BUILD=$_I3_BUILD \
	I3_TESTDATA=$_I3_TESTDATA \
	I3_PRODDATA=$_I3_PRODDATA \
	ROOTSYS=$_ROOTSYS \
	I3_SHELL=$_I3_SHELL \
	PONESRCDIR=$_PONE_SRC \
    HDF5_USE_FILE_LOCKING=$_HDF5_USE_FILE_LOCKING \
	 \
	$NEW_SHELL --rcfile <(echo '. ~/.bashrc; export PS1="\e[0;31m[\u@\h \W]\$ \e[m "')

else  # not clean, use previous environment
    $NEW_SHELL "$@"
fi

STATUS=$?

if [ -z "$ARGV" ]
then
    echo "Exited Icetray Environment."
fi
exit $STATUS

